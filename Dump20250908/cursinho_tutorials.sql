-- MySQL dump 10.13  Distrib 8.0.41, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: cursinho
-- ------------------------------------------------------
-- Server version	8.0.41

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `tutorials`
--

DROP TABLE IF EXISTS `tutorials`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tutorials` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL,
  `content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `category` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `difficulty_level` enum('beginner','intermediate','advanced') COLLATE utf8mb4_unicode_ci DEFAULT 'beginner',
  `author_id` int DEFAULT NULL,
  `is_published` tinyint(1) DEFAULT '1',
  `views` int DEFAULT '0',
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `tutorials_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `users` (`id`) ON DELETE SET NULL
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tutorials`
--

LOCK TABLES `tutorials` WRITE;
/*!40000 ALTER TABLE `tutorials` DISABLE KEYS */;
INSERT INTO `tutorials` VALUES (1,'Introdução ao HTML: Estrutura Básica','# Introdução ao HTML\n\nHTML (HyperText Markup Language) é a linguagem de marcação padrão para criar páginas web. É a base de toda página na internet.\n\n## O que é HTML?\n\nHTML usa \"tags\" para marcar diferentes tipos de conteúdo. Cada tag tem um propósito específico e ajuda o navegador a entender como exibir o conteúdo.\n\n## Estrutura Básica\n\nTodo documento HTML deve ter esta estrutura básica:\n\n```html\n<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Título da Página</title>\n</head>\n<body>\n    <h1>Meu Primeiro Site</h1>\n    <p>Este é um parágrafo.</p>\n</body>\n</html>\n```\n\n## Elementos Principais\n\n### DOCTYPE\nA declaração `<!DOCTYPE html>` informa ao navegador que este é um documento HTML5.\n\n### HTML\nA tag `<html>` é o elemento raiz que contém todo o conteúdo da página.\n\n### HEAD\nA seção `<head>` contém metadados sobre o documento que não são exibidos na página.\n\n### BODY\nA seção `<body>` contém todo o conteúdo visível da página.\n\n## Próximos Passos\n\nAgora que você conhece a estrutura básica, pode começar a adicionar mais conteúdo usando outras tags HTML como `<h2>`, `<p>`, `<a>`, `<img>`, etc.','html','beginner',1,1,0,'2025-09-08 17:30:58','2025-09-08 17:30:58'),(2,'Formulários HTML: Coletando Dados do Usuário','# Formulários HTML\n\nOs formulários são essenciais para coletar informações dos usuários. Eles permitem interação e envio de dados.\n\n## Estrutura Básica de um Formulário\n\n```html\n<form action=\"/processar\" method=\"POST\">\n    <label for=\"nome\">Nome:</label>\n    <input type=\"text\" id=\"nome\" name=\"nome\" required>\n    \n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    \n    <button type=\"submit\">Enviar</button>\n</form>\n```\n\n## Tipos de Input\n\n### Text Input\n```html\n<input type=\"text\" name=\"nome\" placeholder=\"Digite seu nome\">\n```\n\n### Email Input\n```html\n<input type=\"email\" name=\"email\" placeholder=\"seu@email.com\">\n```\n\n### Password Input\n```html\n<input type=\"password\" name=\"senha\">\n```\n\n### Textarea\n```html\n<textarea name=\"mensagem\" rows=\"4\" cols=\"50\"></textarea>\n```\n\n### Select (Dropdown)\n```html\n<select name=\"pais\">\n    <option value=\"br\">Brasil</option>\n    <option value=\"us\">Estados Unidos</option>\n    <option value=\"ca\">Canadá</option>\n</select>\n```\n\n## Validação HTML5\n\nHTML5 oferece validação nativa:\n\n- `required`: Campo obrigatório\n- `minlength` e `maxlength`: Tamanho mínimo e máximo\n- `pattern`: Expressão regular para validação\n- `min` e `max`: Valores mínimo e máximo para números\n\n## Boas Práticas\n\n1. Sempre use labels para acessibilidade\n2. Use tipos de input apropriados\n3. Implemente validação tanto no cliente quanto no servidor\n4. Forneça feedback claro ao usuário','html','intermediate',1,1,0,'2025-09-08 17:30:58','2025-09-08 17:30:58'),(3,'CSS Básico: Estilizando Suas Páginas','# CSS Básico\n\nCSS (Cascading Style Sheets) é usado para estilizar páginas HTML. Com CSS, você controla cores, fontes, layout e muito mais.\n\n## Como Adicionar CSS\n\n### CSS Inline\n```html\n<p style=\"color: blue; font-size: 18px;\">Texto azul</p>\n```\n\n### CSS Interno\n```html\n<head>\n    <style>\n        p {\n            color: blue;\n            font-size: 18px;\n        }\n    </style>\n</head>\n```\n\n### CSS Externo (Recomendado)\n```html\n<head>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n```\n\n## Seletores Básicos\n\n### Seletor de Elemento\n```css\np {\n    color: blue;\n}\n```\n\n### Seletor de Classe\n```css\n.destaque {\n    background-color: yellow;\n}\n```\n\n### Seletor de ID\n```css\n#cabecalho {\n    font-size: 24px;\n}\n```\n\n## Propriedades Essenciais\n\n### Cores\n```css\n.texto {\n    color: #333;\n    background-color: #f0f0f0;\n}\n```\n\n### Fontes\n```css\n.titulo {\n    font-family: Arial, sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n}\n```\n\n### Espaçamento\n```css\n.caixa {\n    margin: 20px;\n    padding: 15px;\n}\n```\n\n## Box Model\n\nTodo elemento HTML é uma \"caixa\" com:\n- **Content**: O conteúdo\n- **Padding**: Espaço interno\n- **Border**: Borda\n- **Margin**: Espaço externo\n\n```css\n.caixa {\n    width: 200px;\n    height: 100px;\n    padding: 10px;\n    border: 2px solid black;\n    margin: 20px;\n}\n```','css','beginner',1,1,0,'2025-09-08 17:30:58','2025-09-08 17:30:58'),(4,'Flexbox: Layout Moderno com CSS','# Flexbox: Layout Flexível\n\nFlexbox é uma ferramenta poderosa para criar layouts responsivos e alinhamentos complexos de forma simples.\n\n## Conceitos Básicos\n\nFlexbox trabalha com dois elementos principais:\n- **Flex Container**: O elemento pai\n- **Flex Items**: Os elementos filhos\n\n## Criando um Flex Container\n\n```css\n.container {\n    display: flex;\n}\n```\n\n## Propriedades do Container\n\n### Direção dos Itens\n```css\n.container {\n    flex-direction: row; /* padrão */\n    /* flex-direction: column; */\n    /* flex-direction: row-reverse; */\n    /* flex-direction: column-reverse; */\n}\n```\n\n### Alinhamento Horizontal\n```css\n.container {\n    justify-content: flex-start; /* padrão */\n    /* justify-content: center; */\n    /* justify-content: flex-end; */\n    /* justify-content: space-between; */\n    /* justify-content: space-around; */\n    /* justify-content: space-evenly; */\n}\n```\n\n### Alinhamento Vertical\n```css\n.container {\n    align-items: stretch; /* padrão */\n    /* align-items: flex-start; */\n    /* align-items: center; */\n    /* align-items: flex-end; */\n}\n```\n\n## Propriedades dos Itens\n\n### Flex Grow\n```css\n.item {\n    flex-grow: 1; /* cresce para ocupar espaço disponível */\n}\n```\n\n### Flex Shrink\n```css\n.item {\n    flex-shrink: 1; /* pode encolher se necessário */\n}\n```\n\n### Flex Basis\n```css\n.item {\n    flex-basis: 200px; /* tamanho base */\n}\n```\n\n## Exemplo Prático: Layout de 3 Colunas\n\n```html\n<div class=\"container\">\n    <div class=\"sidebar\">Sidebar</div>\n    <div class=\"main\">Conteúdo Principal</div>\n    <div class=\"sidebar\">Sidebar</div>\n</div>\n```\n\n```css\n.container {\n    display: flex;\n    min-height: 100vh;\n}\n\n.sidebar {\n    flex: 0 0 200px; /* não cresce, não encolhe, 200px de largura */\n    background-color: #f0f0f0;\n}\n\n.main {\n    flex: 1; /* ocupa todo o espaço restante */\n    padding: 20px;\n}\n```\n\n## Centralizando Elementos\n\n```css\n.center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n```','css','intermediate',1,1,0,'2025-09-08 17:30:58','2025-09-08 17:30:58'),(5,'Introdução ao HTML: Estrutura Básica','# Introdução ao HTML\n\nHTML (HyperText Markup Language) é a linguagem de marcação padrão para criar páginas web. É a base de toda página na internet.\n\n## O que é HTML?\n\nHTML usa \"tags\" para marcar diferentes tipos de conteúdo. Cada tag tem um propósito específico e ajuda o navegador a entender como exibir o conteúdo.\n\n## Estrutura Básica\n\nTodo documento HTML deve ter esta estrutura básica:\n\n```html\n<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Título da Página</title>\n</head>\n<body>\n    <h1>Meu Primeiro Site</h1>\n    <p>Este é um parágrafo.</p>\n</body>\n</html>\n```\n\n## Elementos Principais\n\n### DOCTYPE\nA declaração `<!DOCTYPE html>` informa ao navegador que este é um documento HTML5.\n\n### HTML\nA tag `<html>` é o elemento raiz que contém todo o conteúdo da página.\n\n### HEAD\nA seção `<head>` contém metadados sobre o documento que não são exibidos na página.\n\n### BODY\nA seção `<body>` contém todo o conteúdo visível da página.\n\n## Próximos Passos\n\nAgora que você conhece a estrutura básica, pode começar a adicionar mais conteúdo usando outras tags HTML como `<h2>`, `<p>`, `<a>`, `<img>`, etc.','html','beginner',1,1,0,'2025-09-08 18:16:38','2025-09-08 18:16:38'),(6,'Formulários HTML: Coletando Dados do Usuário','# Formulários HTML\n\nOs formulários são essenciais para coletar informações dos usuários. Eles permitem interação e envio de dados.\n\n## Estrutura Básica de um Formulário\n\n```html\n<form action=\"/processar\" method=\"POST\">\n    <label for=\"nome\">Nome:</label>\n    <input type=\"text\" id=\"nome\" name=\"nome\" required>\n    \n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    \n    <button type=\"submit\">Enviar</button>\n</form>\n```\n\n## Tipos de Input\n\n### Text Input\n```html\n<input type=\"text\" name=\"nome\" placeholder=\"Digite seu nome\">\n```\n\n### Email Input\n```html\n<input type=\"email\" name=\"email\" placeholder=\"seu@email.com\">\n```\n\n### Password Input\n```html\n<input type=\"password\" name=\"senha\">\n```\n\n### Textarea\n```html\n<textarea name=\"mensagem\" rows=\"4\" cols=\"50\"></textarea>\n```\n\n### Select (Dropdown)\n```html\n<select name=\"pais\">\n    <option value=\"br\">Brasil</option>\n    <option value=\"us\">Estados Unidos</option>\n    <option value=\"ca\">Canadá</option>\n</select>\n```\n\n## Validação HTML5\n\nHTML5 oferece validação nativa:\n\n- `required`: Campo obrigatório\n- `minlength` e `maxlength`: Tamanho mínimo e máximo\n- `pattern`: Expressão regular para validação\n- `min` e `max`: Valores mínimo e máximo para números\n\n## Boas Práticas\n\n1. Sempre use labels para acessibilidade\n2. Use tipos de input apropriados\n3. Implemente validação tanto no cliente quanto no servidor\n4. Forneça feedback claro ao usuário','html','intermediate',1,1,0,'2025-09-08 18:16:38','2025-09-08 18:16:38'),(7,'CSS Básico: Estilizando Suas Páginas','# CSS Básico\n\nCSS (Cascading Style Sheets) é usado para estilizar páginas HTML. Com CSS, você controla cores, fontes, layout e muito mais.\n\n## Como Adicionar CSS\n\n### CSS Inline\n```html\n<p style=\"color: blue; font-size: 18px;\">Texto azul</p>\n```\n\n### CSS Interno\n```html\n<head>\n    <style>\n        p {\n            color: blue;\n            font-size: 18px;\n        }\n    </style>\n</head>\n```\n\n### CSS Externo (Recomendado)\n```html\n<head>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n```\n\n## Seletores Básicos\n\n### Seletor de Elemento\n```css\np {\n    color: blue;\n}\n```\n\n### Seletor de Classe\n```css\n.destaque {\n    background-color: yellow;\n}\n```\n\n### Seletor de ID\n```css\n#cabecalho {\n    font-size: 24px;\n}\n```\n\n## Propriedades Essenciais\n\n### Cores\n```css\n.texto {\n    color: #333;\n    background-color: #f0f0f0;\n}\n```\n\n### Fontes\n```css\n.titulo {\n    font-family: Arial, sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n}\n```\n\n### Espaçamento\n```css\n.caixa {\n    margin: 20px;\n    padding: 15px;\n}\n```\n\n## Box Model\n\nTodo elemento HTML é uma \"caixa\" com:\n- **Content**: O conteúdo\n- **Padding**: Espaço interno\n- **Border**: Borda\n- **Margin**: Espaço externo\n\n```css\n.caixa {\n    width: 200px;\n    height: 100px;\n    padding: 10px;\n    border: 2px solid black;\n    margin: 20px;\n}\n```','css','beginner',1,1,0,'2025-09-08 18:16:38','2025-09-08 18:16:38'),(8,'Flexbox: Layout Moderno com CSS','# Flexbox: Layout Flexível\n\nFlexbox é uma ferramenta poderosa para criar layouts responsivos e alinhamentos complexos de forma simples.\n\n## Conceitos Básicos\n\nFlexbox trabalha com dois elementos principais:\n- **Flex Container**: O elemento pai\n- **Flex Items**: Os elementos filhos\n\n## Criando um Flex Container\n\n```css\n.container {\n    display: flex;\n}\n```\n\n## Propriedades do Container\n\n### Direção dos Itens\n```css\n.container {\n    flex-direction: row; /* padrão */\n    /* flex-direction: column; */\n    /* flex-direction: row-reverse; */\n    /* flex-direction: column-reverse; */\n}\n```\n\n### Alinhamento Horizontal\n```css\n.container {\n    justify-content: flex-start; /* padrão */\n    /* justify-content: center; */\n    /* justify-content: flex-end; */\n    /* justify-content: space-between; */\n    /* justify-content: space-around; */\n    /* justify-content: space-evenly; */\n}\n```\n\n### Alinhamento Vertical\n```css\n.container {\n    align-items: stretch; /* padrão */\n    /* align-items: flex-start; */\n    /* align-items: center; */\n    /* align-items: flex-end; */\n}\n```\n\n## Propriedades dos Itens\n\n### Flex Grow\n```css\n.item {\n    flex-grow: 1; /* cresce para ocupar espaço disponível */\n}\n```\n\n### Flex Shrink\n```css\n.item {\n    flex-shrink: 1; /* pode encolher se necessário */\n}\n```\n\n### Flex Basis\n```css\n.item {\n    flex-basis: 200px; /* tamanho base */\n}\n```\n\n## Exemplo Prático: Layout de 3 Colunas\n\n```html\n<div class=\"container\">\n    <div class=\"sidebar\">Sidebar</div>\n    <div class=\"main\">Conteúdo Principal</div>\n    <div class=\"sidebar\">Sidebar</div>\n</div>\n```\n\n```css\n.container {\n    display: flex;\n    min-height: 100vh;\n}\n\n.sidebar {\n    flex: 0 0 200px; /* não cresce, não encolhe, 200px de largura */\n    background-color: #f0f0f0;\n}\n\n.main {\n    flex: 1; /* ocupa todo o espaço restante */\n    padding: 20px;\n}\n```\n\n## Centralizando Elementos\n\n```css\n.center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n```','css','intermediate',1,1,0,'2025-09-08 18:16:38','2025-09-08 18:16:38');
/*!40000 ALTER TABLE `tutorials` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-09-08 15:30:16
